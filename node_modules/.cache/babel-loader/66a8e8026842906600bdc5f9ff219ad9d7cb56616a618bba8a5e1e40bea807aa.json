{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\store\\\\WishProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer, json } from \"react\";\nimport WishContext from \"./wish-context\";\nimport { redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultWishState = {\n  hosts: []\n};\n\n// 3번\nconst wishReducer = async (state, action) => {\n  // 아래의 것들은 값을 계산하기 위함 (같은 것을 집어넣어도 값은 증가)\n\n  let headers = new Headers();\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n  if (action.type === \"ADD\") {\n    let updatedHosts;\n    updatedHosts = [...state.hosts]; // 기존에 담은 배열을 넣어줌\n    updatedHosts = state.hosts.concat(action.hnum); // concat으로 불변성 지키면서 값(호스트번호) 추가\n\n    // action.hnum fetch INSERT\n    const response = await fetch(\"http://localhost:8080/api/wishList/save\", {\n      method: \"POST\",\n      headers: headers,\n      body: action.hnum\n    });\n    if (response.state === 422) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({\n        message: \"Could not save board.\"\n      }, {\n        status: 500\n      });\n    }\n    if (!response) {\n      alert(\"You need to Login\");\n      return redirect(\"/login\");\n    } else {\n      return {\n        hosts: updatedHosts\n      };\n    }\n  }\n  if (action.type === \"REMOVE\") {\n    const existingHostIndex = state.hosts.findIndex(host => host === action.hnum);\n    let updatedHosts;\n    if (existingHostIndex == 0) {\n      // 존재하는 번호가 있다면\n      updatedHosts = state.hosts.filter(host => host !== action.hnum);\n      // 넘어온 값 (삭제값) 이 아닌 것들만 남겨놓음\n    }\n\n    // action.hnum 를 찾아서 삭제해주는 fetch DELETE\n    const response = await fetch(\"http://localhost:8080/api/wishList/delete\", {\n      method: \"DELETE\",\n      headers: headers,\n      body: JSON.stringify({\n        hostNum: action.hnum\n      })\n    });\n    if (response.state === 422) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({\n        message: \"Could not save board.\"\n      }, {\n        status: 500\n      });\n    }\n    return {\n      hosts: updatedHosts\n    };\n  }\n  return defaultWishState;\n};\nconst WishProvider = props => {\n  _s();\n  const [wishState, dispatchWishAction] = useReducer(wishReducer, defaultWishState);\n  // 2번\n  const addItemToWishHandler = hnum => {\n    dispatchWishAction({\n      type: \"ADD\",\n      hnum: hnum\n    });\n  };\n  const removeItemFromWishHandler = hnum => {\n    dispatchWishAction({\n      type: \"REMOVE\",\n      hnum: hnum\n    });\n  };\n\n  // 1번 -> context 생성 파일로 넘어감\n  const cartContext = {\n    hosts: wishState.hosts,\n    addHost: addItemToWishHandler,\n    removeHost: removeItemFromWishHandler\n  };\n  return /*#__PURE__*/_jsxDEV(WishContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(WishProvider, \"rksbutMthC+1ZGxEcEx35r/VszU=\");\n_c = WishProvider;\nexport default WishProvider;\nvar _c;\n$RefreshReg$(_c, \"WishProvider\");","map":{"version":3,"names":["useReducer","json","WishContext","redirect","jsxDEV","_jsxDEV","defaultWishState","hosts","wishReducer","state","action","headers","Headers","accessToken","localStorage","getItem","append","type","updatedHosts","concat","hnum","response","fetch","method","body","ok","message","status","alert","existingHostIndex","findIndex","host","filter","JSON","stringify","hostNum","WishProvider","props","_s","wishState","dispatchWishAction","addItemToWishHandler","removeItemFromWishHandler","cartContext","addHost","removeHost","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/store/WishProvider.js"],"sourcesContent":["import { useReducer, json } from \"react\";\r\nimport WishContext from \"./wish-context\";\r\nimport { redirect } from \"react-router-dom\";\r\n\r\nconst defaultWishState = {\r\n  hosts: [],\r\n};\r\n\r\n// 3번\r\nconst wishReducer = async (state, action) => {\r\n  // 아래의 것들은 값을 계산하기 위함 (같은 것을 집어넣어도 값은 증가)\r\n\r\n  let headers = new Headers();\r\n\r\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n  if (accessToken && accessToken !== null) {\r\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\r\n  }\r\n\r\n  if (action.type === \"ADD\") {\r\n    let updatedHosts;\r\n    updatedHosts = [...state.hosts]; // 기존에 담은 배열을 넣어줌\r\n    updatedHosts = state.hosts.concat(action.hnum); // concat으로 불변성 지키면서 값(호스트번호) 추가\r\n\r\n    // action.hnum fetch INSERT\r\n    const response = await fetch(\"http://localhost:8080/api/wishList/save\", {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: action.hnum,\r\n    });\r\n\r\n    if (response.state === 422) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Could not save board.\" }, { status: 500 });\r\n    }\r\n    if (!response) {\r\n      alert(\"You need to Login\");\r\n      return redirect(\"/login\");\r\n    } else {\r\n      return {\r\n        hosts: updatedHosts,\r\n      };\r\n    }\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingHostIndex = state.hosts.findIndex(\r\n      (host) => host === action.hnum\r\n    );\r\n    let updatedHosts;\r\n\r\n    if (existingHostIndex == 0) {\r\n      // 존재하는 번호가 있다면\r\n      updatedHosts = state.hosts.filter((host) => host !== action.hnum);\r\n      // 넘어온 값 (삭제값) 이 아닌 것들만 남겨놓음\r\n    }\r\n\r\n    // action.hnum 를 찾아서 삭제해주는 fetch DELETE\r\n    const response = await fetch(\"http://localhost:8080/api/wishList/delete\", {\r\n      method: \"DELETE\",\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        hostNum: action.hnum,\r\n      }),\r\n    });\r\n\r\n    if (response.state === 422) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Could not save board.\" }, { status: 500 });\r\n    }\r\n\r\n    return {\r\n      hosts: updatedHosts,\r\n    };\r\n  }\r\n  return defaultWishState;\r\n};\r\n\r\nconst WishProvider = (props) => {\r\n  const [wishState, dispatchWishAction] = useReducer(\r\n    wishReducer,\r\n    defaultWishState\r\n  );\r\n  // 2번\r\n  const addItemToWishHandler = (hnum) => {\r\n    dispatchWishAction({ type: \"ADD\", hnum: hnum });\r\n  };\r\n\r\n  const removeItemFromWishHandler = (hnum) => {\r\n    dispatchWishAction({ type: \"REMOVE\", hnum: hnum });\r\n  };\r\n\r\n  // 1번 -> context 생성 파일로 넘어감\r\n  const cartContext = {\r\n    hosts: wishState.hosts,\r\n    addHost: addItemToWishHandler,\r\n    removeHost: removeItemFromWishHandler,\r\n  };\r\n\r\n  return (\r\n    <WishContext.Provider value={cartContext}>\r\n      {/* 4번 */}\r\n      {props.children}\r\n    </WishContext.Provider>\r\n  );\r\n};\r\n\r\nexport default WishProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}