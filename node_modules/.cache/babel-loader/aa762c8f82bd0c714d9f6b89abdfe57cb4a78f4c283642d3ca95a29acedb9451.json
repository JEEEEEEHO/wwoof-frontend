{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\components\\\\host\\\\HostSearchPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport HostList from \"./HostList\";\nimport HostOption from \"./HostOption\";\nimport HostMap from \"./HostMap\";\nimport { useLoaderData, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HostSearchPage = () => {\n  _s();\n  const {\n    hosts,\n    wishs\n  } = useLoaderData();\n  const [hostsList, setHostsList] = useState([]);\n  const [wishList, setWishList] = useState([]);\n\n  // 가장 처음 페이지 렌더링 될 때\n  useEffect(() => {\n    setHostsList(hosts);\n    setWishList(wishs);\n  }, [hosts, wishs]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HostOption, {\n      setHostsList: setHostsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HostList, {\n      hostsList: hostsList,\n      wishList: wishList,\n      setWishList: setWishList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HostMap, {\n      hosts: hostsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HostSearchPage, \"LkEqk3JCBYd6HJovQylPf1NOcn4=\", false, function () {\n  return [useLoaderData];\n});\n_c = HostSearchPage;\nexport default HostSearchPage;\nexport async function loader() {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n\n  // \n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n  const [responseHost, responseWish] = await Promise.all([fetch(\"http://localhost:8080/api/host/list\", {\n    method: \"GET\",\n    headers: headers\n  }), fetch(\"http://localhost:8080/api/wishList/list\", {\n    method: \"GET\",\n    headers: headers\n  })]);\n  if (!responseHost.ok || !responseWish.ok) {\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    let hosts = responseHost.json();\n    let wishs = responseWish.json();\n    return {\n      hosts,\n      wishs\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"HostSearchPage\");","map":{"version":3,"names":["useState","useEffect","HostList","HostOption","HostMap","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","HostSearchPage","_s","hosts","wishs","hostsList","setHostsList","wishList","setWishList","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","headers","Headers","accessToken","localStorage","getItem","append","responseHost","responseWish","Promise","all","fetch","method","ok","message","status","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/components/host/HostSearchPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport HostList from \"./HostList\";\r\nimport HostOption from \"./HostOption\";\r\nimport HostMap from \"./HostMap\";\r\n\r\nimport { useLoaderData, json } from \"react-router-dom\";\r\n\r\nconst HostSearchPage = () => {\r\n  const { hosts, wishs } = useLoaderData();\r\n\r\n  const [hostsList, setHostsList] = useState([]);\r\n  const [wishList, setWishList] = useState([]);\r\n\r\n  // 가장 처음 페이지 렌더링 될 때\r\n  useEffect(() => {\r\n    setHostsList(hosts);\r\n    setWishList(wishs);\r\n  }, [hosts, wishs]);\r\n\r\n  return (\r\n    <>\r\n      <HostOption setHostsList={setHostsList} />\r\n      {/* 검색에서 찾음 */}\r\n      <HostList hostsList={hostsList} wishList={wishList} setWishList = {setWishList} />\r\n      {/* 검색에서 찾은 값을 리스트로 보냄 */}\r\n      <HostMap hosts={hostsList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HostSearchPage;\r\n\r\nexport async function loader() {\r\n  let headers = new Headers({\r\n    \"Content-Type\": \"application/json\",\r\n  });\r\n\r\n  // \r\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n  if (accessToken && accessToken !== null) {\r\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\r\n  }\r\n\r\n  const [responseHost, responseWish] = await Promise.all([\r\n    fetch(\"http://localhost:8080/api/host/list\", {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    }),\r\n    fetch(\"http://localhost:8080/api/wishList/list\", {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    }),\r\n  ]);\r\n\r\n  if (!responseHost.ok || !responseWish.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch events.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    let hosts =  responseHost.json();\r\n    let wishs =  responseWish.json();\r\n\r\n    return { hosts, wishs };\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGT,aAAa,CAAC,CAAC;EAExC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACde,YAAY,CAACH,KAAK,CAAC;IACnBK,WAAW,CAACJ,KAAK,CAAC;EACpB,CAAC,EAAE,CAACD,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,oBACEN,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACL,UAAU;MAACa,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1Cf,OAAA,CAACN,QAAQ;MAACa,SAAS,EAAEA,SAAU;MAACE,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAIA;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElFf,OAAA,CAACJ,OAAO;MAACS,KAAK,EAAEE;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7B,CAAC;AAEP,CAAC;AAACX,EAAA,CArBID,cAAc;EAAA,QACON,aAAa;AAAA;AAAAmB,EAAA,GADlCb,cAAc;AAuBpB,eAAeA,cAAc;AAE7B,OAAO,eAAec,MAAMA,CAAA,EAAG;EAC7B,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC;IACxB,cAAc,EAAE;EAClB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACxD,IAAIF,WAAW,IAAIA,WAAW,KAAK,IAAI,EAAE;IACvCF,OAAO,CAACK,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGH,WAAW,CAAC;EAC1D;EAEA,MAAM,CAACI,YAAY,EAAEC,YAAY,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACrDC,KAAK,CAAC,qCAAqC,EAAE;IAC3CC,MAAM,EAAE,KAAK;IACbX,OAAO,EAAEA;EACX,CAAC,CAAC,EACFU,KAAK,CAAC,yCAAyC,EAAE;IAC/CC,MAAM,EAAE,KAAK;IACbX,OAAO,EAAEA;EACX,CAAC,CAAC,CACH,CAAC;EAEF,IAAI,CAACM,YAAY,CAACM,EAAE,IAAI,CAACL,YAAY,CAACK,EAAE,EAAE;IACxC,MAAMhC,IAAI,CACR;MAAEiC,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,IAAI3B,KAAK,GAAImB,YAAY,CAAC1B,IAAI,CAAC,CAAC;IAChC,IAAIQ,KAAK,GAAImB,YAAY,CAAC3B,IAAI,CAAC,CAAC;IAEhC,OAAO;MAAEO,KAAK;MAAEC;IAAM,CAAC;EACzB;AACF;AAAC,IAAAU,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}