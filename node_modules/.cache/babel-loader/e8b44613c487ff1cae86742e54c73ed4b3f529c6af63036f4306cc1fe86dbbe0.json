{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rlawl\\\\IdeaProjects\\\\wwoof-frontend\\\\wwoof-frontend\\\\src\\\\components\\\\host\\\\HostSearchPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport HostList from \"./HostList\";\nimport HostOption from \"./HostOption\";\nimport HostMap from \"./HostMap\";\nimport { useLoaderData, json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HostSearchPage = () => {\n  _s();\n  const hosts = useLoaderData();\n  const [hostsList, setHostsList] = useState([]);\n\n  // 가장 처음 페이지 렌더링 될 때\n  useEffect(() => {\n    setHostsList(hosts);\n  }, [hosts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HostOption, {\n      setHostsList: setHostsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HostList, {\n      hostsList: hostsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HostMap, {\n      hosts: hostsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HostSearchPage, \"xAqwqRc7aOaZVGBm76H8f8z+NiE=\", false, function () {\n  return [useLoaderData];\n});\n_c = HostSearchPage;\nexport default HostSearchPage;\nexport async function loader() {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\"\n  });\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n  if (accessToken && accessToken !== null) {\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\n  }\n  const response = await fetch(\"http://localhost:8080/api/host/list\", {\n    method: \"GET\",\n    headers: headers\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"HostSearchPage\");","map":{"version":3,"names":["useState","useEffect","HostList","HostOption","HostMap","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","HostSearchPage","_s","hosts","hostsList","setHostsList","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","headers","Headers","accessToken","localStorage","getItem","append","response","fetch","method","ok","message","status","$RefreshReg$"],"sources":["C:/Users/rlawl/IdeaProjects/wwoof-frontend/wwoof-frontend/src/components/host/HostSearchPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport HostList from \"./HostList\";\r\nimport HostOption from \"./HostOption\";\r\nimport HostMap from \"./HostMap\";\r\n\r\nimport { useLoaderData, json } from \"react-router-dom\";\r\n\r\nconst HostSearchPage = () => {\r\n  const hosts = useLoaderData();\r\n\r\n  const [hostsList, setHostsList] = useState([]);\r\n  \r\n\r\n  // 가장 처음 페이지 렌더링 될 때\r\n  useEffect(() => {\r\n    setHostsList(hosts);\r\n  },[hosts]);\r\n\r\n  return (\r\n    <>\r\n      <HostOption setHostsList={setHostsList} />\r\n      {/* 검색에서 찾음 */}\r\n      <HostList hostsList={hostsList} />\r\n      {/* 검색에서 찾은 값을 리스트로 보냄 */}\r\n      <HostMap hosts={hostsList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HostSearchPage;\r\n\r\nexport async function loader() {\r\n  let headers = new Headers({\r\n    \"Content-Type\": \"application/json\",\r\n  });\r\n\r\n  const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\r\n  if (accessToken && accessToken !== null) {\r\n    headers.append(\"Authorization\", \"Bearer \" + accessToken);\r\n  }\r\n\r\n  const response = await fetch(\"http://localhost:8080/api/host/list\", {\r\n    method: \"GET\",\r\n    headers: headers,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"Could not fetch events.\" },\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAGR,aAAa,CAAC,CAAC;EAE7B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAG9C;EACAC,SAAS,CAAC,MAAM;IACdc,YAAY,CAACF,KAAK,CAAC;EACrB,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAEV,oBACEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACL,UAAU;MAACY,YAAY,EAAEA;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1CZ,OAAA,CAACN,QAAQ;MAACY,SAAS,EAAEA;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElCZ,OAAA,CAACJ,OAAO;MAACS,KAAK,EAAEC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7B,CAAC;AAEP,CAAC;AAACR,EAAA,CApBID,cAAc;EAAA,QACJN,aAAa;AAAA;AAAAgB,EAAA,GADvBV,cAAc;AAsBpB,eAAeA,cAAc;AAE7B,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC7B,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC;IACxB,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EACxD,IAAIF,WAAW,IAAIA,WAAW,KAAK,IAAI,EAAE;IACvCF,OAAO,CAACK,MAAM,CAAC,eAAe,EAAE,SAAS,GAAGH,WAAW,CAAC;EAC1D;EAEA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;IAClEC,MAAM,EAAE,KAAK;IACbR,OAAO,EAAEA;EACX,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM1B,IAAI,CACR;MAAE2B,OAAO,EAAE;IAA0B,CAAC,EACtC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACF;AAAC,IAAAR,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}